<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.snow.storeapi.mapper.GoodsMapper">
    <resultMap id="BaseResultMap" type="com.snow.storeapi.entity.GoodsStock">
        <id column="id" jdbcType="INTEGER" property="id" />
        <result column="sku" jdbcType="VARCHAR" property="sku" />
        <result column="name" jdbcType="VARCHAR" property="name" />
        <result column="category" jdbcType="INTEGER" property="category" />
        <result column="img_url" jdbcType="VARCHAR" property="imgUrl" />
        <result column="sale_price" jdbcType="DECIMAL" property="salePrice" />
        <result column="cost_price" jdbcType="DECIMAL" property="costPrice" />
        <result column="color" jdbcType="VARCHAR" property="color" />
        <result column="size" jdbcType="VARCHAR" property="size" />
        <result column="current_stock" jdbcType="INTEGER" property="currentStock" />
    </resultMap>
    <select id="findByDept" resultMap="BaseResultMap">
        SELECT
        g.id, sku, name, category, img_url, sale_price, cost_price, g.modify_time,
        s.color, s.size, s.current_stock
        FROM
        stock s
        LEFT JOIN goods g ON g.id = s.goods_id and s.dept_id = #{deptId, jdbcType=INTEGER}
        WHERE
        g.deleted = 0
        <trim>
            <if test="name != null">
                AND g.name LIKE CONCAT(CONCAT('%', #{name, jdbcType=VARCHAR}), '%')
            </if>
            <if test="sku != null">
                AND g.sku LIKE CONCAT(CONCAT('%', #{sku, jdbcType=VARCHAR}), '%')
            </if>
        </trim>
        ORDER BY
        <choose>
            <when test="sort != null">
                #{sort}
            </when>
            <otherwise>
                g.modify_time desc
            </otherwise>
        </choose>
    </select>
    <select id="count" resultType="int">
        SELECT FOUND_ROWS() AS total;
    </select>
</mapper>