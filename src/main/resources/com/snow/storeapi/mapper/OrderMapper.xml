<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.snow.storeapi.mapper.OrderMapper">
    <resultMap id="orderMap" type="map">
        <result property="address" column="address" typeHandler="com.snow.storeapi.config.JsonTypeHandler" />
    </resultMap>

    <resultMap id="orderData" type="map">
        <result property="customerAddress" column="customerAddress" typeHandler="com.snow.storeapi.config.JsonTypeHandler" />
    </resultMap>
    <sql id="tableAndWhere">
        FROM `order` o
        LEFT JOIN customer c ON o.buyer = c.id
        WHERE
        deleted = 0
        <trim>
            <if test="category != null">
                AND o.category = #{category}
            </if>
            <if test="address != null">
                AND c.address LIKE CONCAT(CONCAT('%', #{address}), '%')
            </if>
            <if test="customerName != null">
                AND c.name LIKE CONCAT(CONCAT('%', #{customerName}), '%')
            </if>
            AND o.create_time <![CDATA[>= ]]> #{startDate}
            AND o.create_time <![CDATA[<= ]]> #{endDate}
        </trim>
    </sql>
    <select id="findByPage" resultMap="orderMap">
        SELECT
        o.id,
        o.total,
        o.total_money AS totalMoney,
        o.buyer,
        c.`name`,
        c.address,
        c.address_detail as addressDetail,
        c.mobile,
        c.open_id AS openId,
        o.create_time AS createTime,
        o.payment_status as paymentStatus
        <include refid="tableAndWhere" />
        ORDER BY
        o.create_time DESC
        LIMIT #{start},#{end}
    </select>
    <select id="count" resultType="int">
        select count(1) <include refid="tableAndWhere" />
    </select>
    <select id="getDetailByOrderId" resultType="map">
        SELECT
            g.pre_sku as preSku,
            g.`name`,
            s.color,
            s.size,
            og.amount,
            og.sale_price AS salePrice
        FROM
            order_goods og
            LEFT JOIN stock s ON og.stock_id = s.id
            LEFT JOIN goods g ON s.goods_id = g.id
            where og.deleted = 0 and og.order_id = #{orderId}
    </select>

    <select id="getOrderDataById" resultMap="orderData">
    SELECT
        g.sku,
        g.`name`,
        s.color,
        s.size,
        og.amount,
        og.sale_price AS salePrice,
        og.subtotal_money as subtotalMoney,
        g.discount,
        c.`name` as customerName,
        c.address as customerAddress,
        c.address_detail as addressDetail,
        c.mobile as customerMoblie,
        u.user_name
    FROM
        `order` o
        INNER JOIN order_goods og ON o.id = og.order_id
        LEFT JOIN stock s on s.id = og.stock_id
        LEFT JOIN goods g ON s.goods_id = g.id
        LEFT JOIN `user` u ON o.create_by = u.id
        LEFT JOIN customer c on o.buyer  = c.id
        WHERE o.id = #{orderId} and o.deleted = 0
    </select>

    <select id="getGroupBy" resultType="map">
        SELECT g.sku,g.name,s.color
        FROM
            `order` o
            INNER JOIN order_goods og ON o.id = og.order_id
            LEFT JOIN stock s ON s.id = og.stock_id
            LEFT JOIN goods g ON s.goods_id = g.id
            LEFT JOIN `user` u ON o.create_by = u.id
            LEFT JOIN customer c ON o.buyer = c.id
            WHERE o.id = #{orderId} and o.deleted = 0
        GROUP BY g.sku,g.name,s.color
    </select>

    <select id="sumMoney" resultType="java.lang.Integer">
        select sum(total_money) from
        `order` where deleted = 0
        and dept_id = #{deptId}
        AND create_time <![CDATA[>= ]]> DATE_FORMAT(NOW(),'%Y-%m-%d 00:00:00')
        AND create_time <![CDATA[<= ]]> DATE_FORMAT(NOW(),'%Y-%m-%d 23:59:59')
    </select>
    <select id="sumAmount" resultType="java.lang.Integer">
        select sum(total) from
        `order` where deleted = 0
        and dept_id = #{deptId}
        and category = #{category}
        AND create_time <![CDATA[>= ]]> DATE_FORMAT(NOW(),'%Y-%m-%d 00:00:00')
        AND create_time <![CDATA[<= ]]> DATE_FORMAT(NOW(),'%Y-%m-%d 23:59:59')
    </select>

    <select id="chartMoney" resultType="hashmap">
        select sum(total_money) total, date(create_time) createTime from `order`
        where deleted = 0
        and dept_id = #{deptId}
        and category = #{category}
        and DATE_SUB(CURDATE(), INTERVAL 6 DAY) <![CDATA[<= ]]> date(create_time)
        group by date(create_time)
        order by date(create_time);
    </select>

    <select id="chartAmount" resultType="hashmap">
        select sum(total) total, date(create_time) createTime from `order`
        where deleted = 0
        and dept_id = #{deptId}
        and category = #{category}
        and DATE_SUB(CURDATE(), INTERVAL 6 DAY) <![CDATA[<= ]]> date(create_time)
        group by date(create_time)
        order by date(create_time);
    </select>
</mapper>